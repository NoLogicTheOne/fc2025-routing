import { Layout, Typography, Card, Space, Divider, List } from 'antd';
import { Link } from 'react-router-dom';
import { ROUTES } from '../constants/routes';
import { TypedLink } from '../components/TypedLink';

const { Title, Paragraph, Text } = Typography;

export function LinkStringPage() {
  const stringExamples = [
    { path: '/links', description: '–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ' },
    { path: '/links/navigate', description: '–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Navigate' },
    { path: '/', description: '–ö–æ—Ä–Ω–µ–≤–æ–π –ø—É—Ç—å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã' },
    { path: '../', description: '–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ' },
  ];

  return (
    <Layout style={{ padding: '24px' }}>
      <Title level={1}>üìù String Links</Title>

      <Paragraph>
        –°—Ç—Ä–æ–∫–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ - —ç—Ç–æ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ React Router. –û–Ω–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –æ–±—ã—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å
        –ø—É—Ç—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç <Text code>Link</Text>.
      </Paragraph>

      <Divider />

      <Title level={2}>–ü—Ä–∏–º–µ—Ä—ã —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫</Title>

      <Card title='–¢–∏–ø—ã —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ø—É—Ç–µ–π' style={{ marginBottom: '16px' }}>
        <List
          dataSource={stringExamples}
          renderItem={item => (
            <List.Item>
              <div>
                <Text code>{item.path}</Text> - {item.description}
                <br />
                <Link to={item.path}>–ü–µ—Ä–µ–π—Ç–∏ ‚Üí</Link>
              </div>
            </List.Item>
          )}
        />
      </Card>

      <Card title='–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫'>
        <Paragraph>
          ‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è - –Ω–µ —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
          <br />
          ‚Ä¢ –ì–∏–±–∫–æ—Å—Ç—å - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
          <br />
          ‚Ä¢ –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å - –ª–µ–≥–∫–æ –ø–æ–Ω—è—Ç—å –∫—É–¥–∞ –≤–µ–¥–µ—Ç —Å—Å—ã–ª–∫–∞
          <br />‚Ä¢ –û–≥—Ä–∞–∏—á–µ–Ω–∏—è - –Ω–µ—Ç —Ç–∏–ø–∏–∑–∞—Ü–∏–∏, –≤–æ–∑–º–æ–∂–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ø—É—Ç—è—Ö
        </Paragraph>
      </Card>

      <Divider />

      <Title level={3}>–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –¥—Ä—É–≥–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º</Title>
      <Space direction='vertical'>
        <TypedLink to={ROUTES.links} params={{ linkId: 'links' }}>
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç–∏–ø–æ–≤ —Å—Å—ã–ª–æ–∫
        </TypedLink>
        <TypedLink to={ROUTES.linkNavigate} params={{ linkId: 'links' }}>
          üß≠ Navigate Links ‚Üí
        </TypedLink>
        <TypedLink to={ROUTES.linkFunction} params={{ linkId: 'links' }}>
          ‚öôÔ∏è Function Links ‚Üí
        </TypedLink>
        <TypedLink to={ROUTES.linkInterpolate} params={{ linkId: 'links' }}>
          üîÄ Interpolate Links ‚Üí
        </TypedLink>
        <TypedLink to={ROUTES.home}>üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é ‚Üí</TypedLink>
      </Space>
    </Layout>
  );
}
